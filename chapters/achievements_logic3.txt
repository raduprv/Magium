* Start of Frame
+ achievement chapter = 1
	List1 : Reset
	List1 : Add line "No regrets"
	List2 : Reset
	List2 : Add line "He who risks nothing can gain nothing."
	List1 : Add line "Password acquired"
	List2 : Add line "You never know when a secret code might come in handy."
	String 3 : Set alterable string to "2"

* Start of Frame
+ achievement chapter = 2
	List1 : Reset
	List1 : Add line "Metal golem slayer"
	List2 : Reset
	List2 : Add line "Kill a large metal golem with your own hands."
	List1 : Add line "Time to get serious"
	List2 : Add line "Sometimes, you just need to pull out all the stops."
	List1 : Add line "I cannot tell a lie."
	List2 : Add line "Honest Barry is what they call you."
	List1 : Add line "Reckless"
	List2 : Add line "Live up to your new nickname."
	String 3 : Set alterable string to "2"

* Start of Frame
+ achievement chapter = 3
	List1 : Reset
	List1 : Add line "Ominous foreshadowing"
	List2 : Reset
	List2 : Add line "Were you perhaps expecting something less vague?"
	List1 : Add line "An unexpected bonus"
	List2 : Add line "Not all mistakes lead to misfortune."
	List1 : Add line "A job well done!"
	List2 : Add line "Congratulations! You managed to find the only death scene in this chapter. (You were doing it on purpose, right?) "
	List1 : Add line "An unforeseen premonition"
	List2 : Add line "Hint: Your stat device will not help you here."
	String 3 : Set alterable string to "3"

* Start of Frame
+ achievement chapter = 4
	List1 : Reset
	List1 : Add line "Fourth wall demolisher"
	List2 : Reset
	List2 : Add line "Did you ever break the 4th wall so hard that you felt you could almost see through the cracks?"
	List1 : Add line "A hidden alliance"
	List2 : Add line "Form a secret alliance with a potential new king of Ollendor."
	List1 : Add line "A master of deception"
	List2 : Add line "Your quick wit and improvisation skills are second to none. Nobody is better at lying than you."
	List1 : Add line "Rock throwing champion"
	List2 : Add line "Defeat a very powerful adversary using only a rock taken from the ground."
	String 3 : Set alterable string to "4"

* Start of Frame
+ achievement chapter = 5
	List1 : Reset
	List1 : Add line "Opportunist"
	List2 : Reset
	List2 : Add line "Why give away anything for free when you can make a small profit instead?"
	List1 : Add line "The good old days"
	List2 : Add line "Reenact one of the night shifts from the first days of the tournament."
	List1 : Add line "I can hear footsteps."
	List2 : Add line "Listen carefully. The assassin is getting nearer."
	List1 : Add line "Challenge accepted"
	List2 : Add line "Take on a challenge that not many mortals would dare to attempt."
	String 3 : Set alterable string to "5"

* Start of Frame
+ achievement chapter = 61
	List1 : Reset
	List1 : Add line "A natural liar"
	List2 : Reset
	List2 : Add line "Lie so well that you make someone question their own short-term memory."
	List1 : Add line "Nice assist"
	List2 : Add line "Get help from someone that you've fought against in the past."
	List1 : Add line "Peek-a-boo!"
	List2 : Add line "Win a very complex game of hide and seek."
	List1 : Add line "An assassin's credo"
	List2 : Add line "Find out what it means to be a true assassin from a skilled practitioner of the craft."
	String 3 : Set alterable string to "6"
	List1 : Add line "Guardian angel"
	List2 : Add line "Prevent someone from dying after seeing their death in a vision."

* Start of Frame
+ achievement chapter = 62
	List1 : Reset
	List1 : Add line "Time freeze enthusiast"
	List2 : Reset
	List2 : Add line "Experience the world being frozen around you two times in the same day."
	List1 : Add line "Curiosity killed the cat"
	List2 : Add line "Be honest. Did you really fall for the trap, or were you just aiming to get this achievement?"
	List1 : Add line "Average is my middle name"
	List2 : Add line "Survive the trip to the surface without having any points invested in your stats."
	List1 : Add line "Quarantine ender"
	List2 : Add line "Help Daren save everyone from the quarantine area in the underground tunnels below Ollendor."
	String 3 : Set alterable string to "6"
	List1 : Add line "Do you hear an echo?"
	List2 : Add line "Listen to a conversation that is happening at the opposite end of a long underground tunnel."

* Start of Frame
+ achievement chapter = 7
	List1 : Reset
	List1 : Add line "An honorable victory"
	List2 : Reset
	List2 : Add line "Defeat Gontrok without taking advantage of his bet with Leila."
	List1 : Add line "Sharpshooter"
	List2 : Add line "An achievement awarded only to those with unmatched crossbow skills."
	List1 : Add line "Paranoid"
	List2 : Add line "The whole world is out to get you. You can't trust anyone. Not even yourself."
	String 3 : Set alterable string to "7"

* Start of Frame
+ achievement chapter = 8
	List1 : Reset
	List1 : Add line "Master of bluffing"
	List2 : Reset
	List2 : Add line "Successfully bluff a living lie detector."
	List1 : Add line "An unusual candidate"
	List2 : Add line "Convince Kelrim to become a candidate for the throne of Ollendor."
	List1 : Add line "A heartfelt promise"
	List2 : Add line "Make a promise with Leila that you will go on adventures together after the end of the tournament."
	String 3 : Set alterable string to "8"
	List1 : Add line "A friend in need"
	List2 : Add line "Help cheer up a friend when he is feeling down."

* Start of Frame
+ achievement chapter = 9
	List1 : Reset
	List1 : Add line "Consolation prize"
	List2 : Reset
	List2 : Add line "A prize awarded for dying more than five times in the same chapter."
	List1 : Add line "An introspective moment"
	List2 : Add line "Take a moment to self-reflect and think about everything that you've achieved."
	List1 : Add line "High-value targets"
	List2 : Add line "Defeat Albert, Peter and the king of the underground without asking the Overseer for help."
	String 3 : Set alterable string to "9"
	List1 : Add line "No need for trinkets"
	List2 : Add line "Defeat the Overseer without making any use of your stat device."

* Start of Frame
+ achievement chapter = 10
	List1 : Reset
	List1 : Add line "Friends with benefits"
	List2 : Reset
	List2 : Add line "Agree to enter a relationship with no strings attached with Melindra after the tournament."
	List1 : Add line "Third piece of the puzzle"
	List2 : Add line "Find the third piece of the puzzle made by Varathia's greatest architect."
	List1 : Add line "No man left behind"
	List2 : Add line "Receive confirmation that every prisoner in the seredium towers has been rescued, including Alice's father."
	String 3 : Set alterable string to "10"
	List1 : Add line "Let's be reasonable!"
	List2 : Add line "Defuse a hostage situation by remaining calm and collected."
	List1 : Add line "Forbidden knowledge"
	List2 : Add line "Find out the true nature of the Magium."

* Start of Frame
+ achievement chapter = 11
	List1 : Reset
	List1 : Add line "Fourth piece of the puzzle"
	List2 : Reset
	List2 : Add line "Find the fourth piece of the puzzle made by Varathia's greatest architect."
	List1 : Add line "A small taste of the big prize"
	List2 : Add line "Use knowledge from the Magium to improve a spell."
	List1 : Add line "Hidden alliance aftermath"
	List2 : Add line "Receive direct confirmation from the Overseer that his plan to free the mage slaves is going smoothly."
	String 3 : Set alterable string to "11"

* Start of Frame
+ achievement chapter = 12
	List1 : Reset
	List1 : Add line "Preparing for the big battle"
	List2 : Reset
	List2 : Add line "Start working on the most important spell to be used against the God of Time."
	List1 : Add line "Tree-hugger"
	List2 : Add line "Become one with nature."
	List1 : Add line "Serial liar"
	List2 : Add line "Successfully bluff two people in the same chapter and manage to survive."
	String 3 : Set alterable string to "12"
	List1 : Add line "One Dagger Man"
	List2 : Add line "Survive against a powerful foe, armed with only one dagger."
	List1 : Add line "Delegator"
	List2 : Add line "Why fight for yourself when you can just have somebody else do it for you?"
	List1 : Add line "(more than) Average Joe"
	List2 : Add line "Reach the end of the third book without leveling up any stats except your magical stats."

* AndroidPlus: On App return from pause?
	Special : Set game resumed to 1

// * Start of Frame
// + achievement chapter = 3
	// List1 : Reset
	// List2 : Reset
	// List1 : Add line "Once an enemy, now an ally"
	// List2 : Add line "Convince an enemy troll to join your side."
	// List1 : Add line "The golden cage"
	// List2 : Add line "Find out why Illuna can cast the spirit fox's golden cage."
	// String 3 : Set alterable string to "3"

// * Start of Frame
// + achievement chapter = 41
	// List1 : Reset
	// List2 : Reset
	// List1 : Add line "Not a team player"
	// List2 : Add line "Get two of the members from your division killed, through your actions."
	// List1 : Add line "Intimidation successful"
	// List2 : Add line "Manage to avoid an assassination attempt by intimidating your adversary into not attacking you."
	// List1 : Add line "Hadrik saves the day!"
	// List2 : Add line "Witness Hadrik's second fight in the arena."
	// String 3 : Set alterable string to "4"
	// List1 : Add line "A calculated risk"
	// List2 : Add line "Sometimes it's better to take small risks than to go the extra mile just to be completely certain."
	// List1 : Add line "Trampler slayer"
	// List2 : Add line "Defeat two tramplers by yourself."

// * Start of Frame
// + achievement chapter = 42
	// List1 : Reset
	// List2 : Reset
	// String 3 : Set alterable string to "4"
	// List1 : Add line "Spear thrower"
	// List2 : Add line "Kill a manticore in mid-flight, by throwing a spear at it."
	// List1 : Add line "Who needs stats?"
	// List2 : Add line "Win the first round of the arena without any points in your stats, and without help from the scythe wielding lessathi."
	// List1 : Add line "Time stop"
	// List2 : Add line "Witness Rose subconsciously casting a time freezing spell, for the first time."
	// List1 : Add line "The assassin's motive"
	// List2 : Add line "Find out the assassin's reason for wanting to kill you in the arena."

// * Start of Frame
// + achievement chapter = 5
	// List1 : Reset
	// List2 : Reset
	// List1 : Add line "Tribal dancer"
	// List2 : Add line "Perform a tribal dance while dodging pillars of fire."
	// List1 : Add line "Divide and conquer"
	// List2 : Add line "Win against the troll by turning his own allies against him."
	// List1 : Add line "Public speaker"
	// List2 : Add line "Hold a speech in front of the arena crowds, after one of your victories."
	// List1 : Add line "United we stand"
	// List2 : Add line "Get Wilhelm and the gladiator that you fight against in the third round to join your team in the bonus round."
	// String 3 : Set alterable string to "5"

// * Start of Frame
// + achievement chapter = 6
	// List1 : Reset
	// List2 : Reset
	// List1 : Add line "Secret code discovered"
	// List2 : Add line "Learn about a secret code that gives you a temporary bonus to your Hearing stat."
	// List1 : Add line "Living on the edge"
	// List2 : Add line "Expend most of your budget with a single purchase."
	// String 3 : Set alterable string to "6"

// * Start of Frame
// + achievement chapter = 7
	// List1 : Reset
	// List2 : Reset
	// List1 : Add line "Just an average assassin"
	// List2 : Add line "Complete king Golmyck's mission without having any points invested in your stats."
	// List1 : Add line "Found the culprit"
	// List2 : Add line "Find out who sabotaged Golmyck's telepathic message device."
	// List1 : Add line "Message delivered"
	// List2 : Add line "Deliver Eiden's still winter message to its rightful recipients."
	// String 3 : Set alterable string to "7"
	// List2 : Add line "Survive the powerful grip of a giant stone hand, without getting crushed."
	// List1 : Add line "One tough cookie"

// * Start of Frame
// + achievement chapter = 8
	// List1 : Reset
	// List2 : Reset
	// List1 : Add line "Stillwater trivia"
	// List2 : Add line "Find out important information about the stillwaters, and their origins."
	// List1 : Add line "Unexpected savior"
	// List2 : Add line "When you are in a pinch, help does not always come from where you'd expect."
	// List1 : Add line "Tree wielder"
	// List2 : Add line "Who needs weapons, when you can just use trees as clubs?"
	// String 3 : Set alterable string to "8"
	// List1 : Add line "Side effects"
	// List2 : Add line "Experience first-hand the side effects of your protection spell."
	// List1 : Add line "A true gentleman"
	// List2 : Add line "Offer to take an extra night shift, in order to make sure that your lady guest gets a good night's sleep."

// * Start of Frame
// + achievement chapter = 9
	// List1 : Reset
	// List2 : Reset
	// List1 : Add line "Something is missing"
	// List2 : Add line "Does this backpack feel lighter to anyone else, or is it just me?"
	// List1 : Add line "I'm a helper!"
	// List2 : Add line "Help the animals in the forest to complete their mission."
	// String 3 : Set alterable string to "9"
	// List1 : Add line "Long live the king!"
	// List2 : Add line "Learn a shocking truth about the current state of affairs in Thilias."
	// List1 : Add line "Master of cards"
	// List2 : Add line "Win a card game against Hadrik."

// * Start of Frame
// + achievement chapter = 10
	// List1 : Reset
	// List2 : Reset
	// List1 : Add line "A creative solution"
	// List2 : Add line "Not all battles need to be won through fighting."
	// List1 : Add line "Mammoth slayer"
	// List2 : Add line "Kill a mammoth with your own hands."
	// List1 : Add line "Demolition man"
	// List2 : Add line "You seem to really enjoy smashing big rocks into one another. Ever thought about doing this for a living?"
	// String 3 : Set alterable string to "10"
	// List1 : Add line "Stalker detected"
	// List2 : Add line "Do you ever get the feeling that you are being watched?"

// * Start of Frame
// + achievement chapter = 11
	// List1 : Reset
	// List2 : Reset
	// List1 : Add line "Supportive friend"
	// List2 : Add line "Encourage a friend who just had an epiphany and wants to change their life for the better. "
	// List1 : Add line "Madman"
	// List2 : Add line "Attack Arraka with a dagger for the second time, and live to tell the tale."
	// List1 : Add line "Cutthroat vs god"
	// List2 : Add line "Witness an epic confrontation between a cutthroat and a god."
	// List1 : Add line "Average Joe 2"
	// List2 : Add line "Finished the first two books without leveling up a single stat."
	// String 3 : Set alterable string to "11"
	// List1 : Add line "A hidden truth"
	// List2 : Add line "Find out what happened to Barry's biological parents."
	// List1 : Add line "The elephant in the room"
	// List2 : Add line "There's always that one guy who can't take a hint and who doesn't realize that some things are better left unsaid."

* Start of Frame
	Special : Start loop "buttons" List Nb Lines( "List1" ) times
	Menu hitbox : Make invisible
	Back hitbox : Make invisible

* Android object : On back button pressed
	storyboard controls : Jump to frame "Achievements b3" (73)

* Multiple Touch: A new touch has occured
	Multiple Touch : Set NewY to YTouch( "Multiple Touch", 0 ) - Y Top Frame
	Multiple Touch : Set OldY to YTouch( "Multiple Touch", 0 ) - Y Top Frame
	Multiple Touch : Set ScrollSpeed to 0

* Multiple Touch: Touch LastNewTouch( "Multiple Touch" ) is active
	Multiple Touch : Set OldY to NewY( "Multiple Touch" )
	Multiple Touch : Set NewY to YTouch( "Multiple Touch", 0 ) - Y Top Frame
	Multiple Touch : Set ScrollSpeed to NewY( "Multiple Touch" ) - OldY( "Multiple Touch" )

// Deceleration

* ScrollSpeed of Multiple Touch > 0
+ NOT Multiple Touch: Touch 0 is active
	Multiple Touch : Set ScrollSpeed to ScrollSpeed( "Multiple Touch" ) - 0.5

* ScrollSpeed of Multiple Touch < 0
+ NOT Multiple Touch: Touch 0 is active
	Multiple Touch : Set ScrollSpeed to ScrollSpeed( "Multiple Touch" ) + 0.5

// Limit Speed

* ScrollSpeed of Multiple Touch > 30
+ NOT Multiple Touch: Touch 0 is active
	Multiple Touch : Set ScrollSpeed to 45

* ScrollSpeed of Multiple Touch < -30
+ NOT Multiple Touch: Touch 0 is active
	Multiple Touch : Set ScrollSpeed to -45

// Scroll Screen

* ScrollSpeed of Multiple Touch > 0
+ Y Top Frame + ( ( Y Bottom Frame - Y Top Frame ) / 2 ) - ScrollSpeed( "Multiple Touch" ) <= ( 128 * List Nb Lines( "List1" ) ) + 500
	storyboard controls : Center display at Y=Y Top Frame + ( ( Y Bottom Frame - Y Top Frame ) / 2 ) - ScrollSpeed( "Multiple Touch" )

* ScrollSpeed of Multiple Touch < 0
+ Y Top Frame + ( ( Y Bottom Frame - Y Top Frame ) / 2 ) - ScrollSpeed( "Multiple Touch" ) < ( 128 * List Nb Lines( "List1" ) ) + 500
	storyboard controls : Center display at Y=Y Top Frame + ( ( Y Bottom Frame - Y Top Frame ) / 2 ) - ScrollSpeed( "Multiple Touch" )

// * ScrollSpeed of Multiple Touch > 0
	// storyboard controls : Center display at Y=Y Top Frame + ( ( Y Bottom Frame - Y Top Frame ) / 2 ) - ScrollSpeed( "Multiple Touch" )

// * ScrollSpeed of Multiple Touch < 0
	// storyboard controls : Center display at Y=Y Top Frame + ( ( Y Bottom Frame - Y Top Frame ) / 2 ) - ScrollSpeed( "Multiple Touch" )

* User clicks with left button on Group.Buttons
	pressed id : Set Counter to Button ID( "Group.Buttons" )

* Repeat while left mouse-key is pressed
	pressed counter : Set Counter to 1

* Repeat while left mouse-key is pressed
+ NOT Mouse pointer is over Group.Buttons
	pointer went off button : Set Counter to 1

* NOT Repeat while left mouse-key is pressed
+ pressed counter = 1
+ NOT Mouse pointer is over Group.Buttons
	pressed counter : Set Counter to 0
	pressed id : Set Counter to 0
	pointer went off button : Set Counter to 0

* NOT Repeat while left mouse-key is pressed
+ pressed counter = 1
+ Mouse pointer is over Group.Buttons
+ Button ID of Group.Buttons <> value( "pressed id" )
	pressed counter : Set Counter to 0
	pressed id : Set Counter to 0
	pointer went off button : Set Counter to 0

* NOT Repeat while left mouse-key is pressed
+ pressed counter = 1
+ Mouse pointer is over Group.Buttons
+ Button ID of Group.Buttons = value( "pressed id" )
+ pointer went off button = 0
	pressed counter : Set Counter to 2
	pressed id : Set Counter to 0

* NOT Repeat while left mouse-key is pressed
+ pressed counter = 1
+ Mouse pointer is over Group.Buttons
+ Button ID of Group.Buttons = value( "pressed id" )
+ pointer went off button = 1
	pressed id : Set Counter to 0
	pointer went off button : Set Counter to 0

// This sets the active detector to the user's touch.

* Multiple Touch: Touch 0 is active
	End Touch : Set X position to XTouch( "Multiple Touch", 0 )
	End Touch : Set Y position to YTouch( "Multiple Touch", 0 )

// This sets the passive detector to the user's touch.

* Multiple Touch: Touch 0 is active
+ Only one action when event loops
	Touch Origin : Set X position to XTouch( "Multiple Touch", 0 )
	Touch Origin : Set Y position to YTouch( "Multiple Touch", 0 )

// When the touch is released, both detectors move off-screen.

* NOT Multiple Touch: Touch 0 is active
	End Touch : Set position at (-1,-1)
	Touch Origin : Set position at (-1,-1)

* On loop "buttons"
	New Objects : Create Button at (-189,-243) layer 1
	Button : Set Button ID to LoopIndex("buttons") + 1
	Button : Set X position to 357
	Button : Set Y position to 300 + Int(LoopIndex("buttons")) * 250
	New Objects : Create Button Name at (-250,-75) from Button
	New Objects : Create String at (-160,0) from Button

* On loop "buttons"
	New Objects : Create Active 2 at (-240,20) from Button
	Active 2 : Set ID to LoopIndex("buttons") + 1

* On loop "buttons"
	New Objects : Create Active at (-230,25) from Button
	Active : Set ID to LoopIndex("buttons") + 1
	 Active 3 : Bring to front
	 Back hitbox : Bring to front
	 Menu hitbox : Bring to front

* On loop "buttons"
	 Back button : Bring to front
	 Main menu button : Bring to front

// * On loop "buttons"
// + LoopIndex("buttons") = 0
// + achievement chapter = 1
// + AC CH1 Coward = 0
	// New Objects : Create Active 2 at (-240,20) from Button

// * On loop "buttons"
// + LoopIndex("buttons") = 0
// + achievement chapter = 1
// + AC CH1 Coward = 1
	// New Objects : Create Active at (-230,15) from Button

// * On loop "buttons"
// + LoopIndex("buttons") = 1
// + On each one of Active 2, loop name "red"
// + achievement chapter = 1
	// New Objects : Create Active 2 at (-240,20) from Button

* Button Name is overlapping Button
	Button Name : Set alterable string to List Line Text$( "List1", Button ID( "Button" ) )
	 Button Name : Bring to front
	String : Set alterable string to List Line Text$( "List2", Button ID( "Button" ) )
	 String : Bring to front

// * On each one of Active 2, loop name "red"
// + AC CH1 Coward = 0
// + ID of Active 2 = 1
// + achievement chapter = 1
	// Active 2 : Reappear

// * On each one of Active 2, loop name "red"
// + AC CH1 Coward = 1
// + ID of Active 2 = 1
// + achievement chapter = 1
	// Active 2 : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 1
+ AC B3 CH1 Regrets = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 1
+ AC B3 CH1 Regrets = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 1
+ AC B3 CH1 Password = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 1
+ AC B3 CH1 Password = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 2
+ AC B3 CH2 metal = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 2
+ AC B3 CH2 metal = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 2
+ AC B3 CH2 serious = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 2
+ AC B3 CH2 serious = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 2
+ AC B3 CH2 lie = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 2
+ AC B3 CH2 lie = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 4
+ achievement chapter = 2
+ AC B3 CH2 reckless = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 4
+ achievement chapter = 2
+ AC B3 CH2 reckless = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 3
+ AC B3 CH3 Ominous = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 3
+ AC B3 CH3 Ominous = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 3
+ AC B3 CH3 Unexpected = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 3
+ AC B3 CH3 Unexpected = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 3
+ AC B3 CH3 Job = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 3
+ AC B3 CH3 Job = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 4
+ achievement chapter = 3
+ AC B3 CH3 Unforeseen = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 4
+ achievement chapter = 3
+ AC B3 CH3 Unforeseen = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 4
+ AC B3 CH4 Demolisher = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 4
+ AC B3 CH4 Demolisher = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 4
+ AC B3 CH4 Alliance = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 4
+ AC B3 CH4 Alliance = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 4
+ AC B3 CH4 Deception = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 4
+ AC B3 CH4 Deception = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 4
+ achievement chapter = 4
+ AC B3 CH4 Thrower = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 4
+ achievement chapter = 4
+ AC B3 CH4 Thrower = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 5
+ AC B3 CH5 Opportunist = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 5
+ AC B3 CH5 Opportunist = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 5
+ AC B3 CH5 Days = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 5
+ AC B3 CH5 Days = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 5
+ AC B3 CH5 Footsteps = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 5
+ AC B3 CH5 Footsteps = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 4
+ achievement chapter = 5
+ AC B3 CH5 Passed = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 4
+ achievement chapter = 5
+ AC B3 CH5 Passed = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 61
+ AC B3 CH6 Natural = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 61
+ AC B3 CH6 Natural = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 61
+ AC B3 CH6 Assist = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 61
+ AC B3 CH6 Assist = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 61
+ AC B3 CH6 Peek = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 61
+ AC B3 CH6 Peek = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 4
+ achievement chapter = 61
+ AC B3 CH6 Credo = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 4
+ achievement chapter = 61
+ AC B3 CH6 Credo = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 5
+ achievement chapter = 61
+ AC B3 CH6 Guardian = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 5
+ achievement chapter = 61
+ AC B3 CH6 Guardian = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 62
+ AC B3 CH6 Freeze = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 62
+ AC B3 CH6 Freeze = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 62
+ AC B3 CH6 Curiosity = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 62
+ AC B3 CH6 Curiosity = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 62
+ AC B3 CH6 Average = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 62
+ AC B3 CH6 Average = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 4
+ achievement chapter = 62
+ AC B3 CH6 Quarantine = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 4
+ achievement chapter = 62
+ AC B3 CH6 Quarantine = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 5
+ achievement chapter = 62
+ AC B3 CH6 Echoes = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 5
+ achievement chapter = 62
+ AC B3 CH6 Echoes = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 7
+ AC B3 CH7 Honorable = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 7
+ AC B3 CH7 Honorable = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 7
+ AC B3 CH7 Sharpshooter = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 7
+ AC B3 CH7 Sharpshooter = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 7
+ AC B3 CH7 Paranoid = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 7
+ AC B3 CH7 Paranoid = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 8
+ AC B3 CH8 Bluffer = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 8
+ AC B3 CH8 Bluffer = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 8
+ AC B3 CH8 Unusual = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 8
+ AC B3 CH8 Unusual = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 8
+ AC B3 CH8 Heartfelt = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 8
+ AC B3 CH8 Heartfelt = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 4
+ achievement chapter = 8
+ AC B3 CH8 Friend = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 4
+ achievement chapter = 8
+ AC B3 CH8 Friend = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 9
+ AC B3 CH9 Prize = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 9
+ AC B3 CH9 Prize = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 9
+ AC B3 CH9 Moment = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 9
+ AC B3 CH9 Moment = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 9
+ AC B3 CH9 Targets = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 9
+ AC B3 CH9 Targets = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 4
+ achievement chapter = 9
+ AC B3 CH9 Trinkets = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 4
+ achievement chapter = 9
+ AC B3 CH9 Trinkets = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 10
+ AC B3 CH10 Benefits = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 10
+ AC B3 CH10 Benefits = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 10
+ AC B3 CH10 Third = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 10
+ AC B3 CH10 Third = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 10
+ AC B3 CH10 Behind = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 10
+ AC B3 CH10 Behind = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 4
+ achievement chapter = 10
+ AC B3 CH10 Reasonable = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 4
+ achievement chapter = 10
+ AC B3 CH10 Reasonable = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 5
+ achievement chapter = 10
+ AC B3 CH10 Forbidden = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 5
+ achievement chapter = 10
+ AC B3 CH10 Forbidden = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 11
+ AC B3 CH11 Fourth = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 11
+ AC B3 CH11 Fourth = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 11
+ AC B3 CH11 Taste = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 11
+ AC B3 CH11 Taste = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 11
+ AC B3 CH11 Aftermath = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 11
+ AC B3 CH11 Aftermath = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 12
+ AC B3 CH12 Battle = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 1
+ achievement chapter = 12
+ AC B3 CH12 Battle = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 12
+ AC B3 CH12 Hugger = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 2
+ achievement chapter = 12
+ AC B3 CH12 Hugger = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 12
+ AC B3 CH12 Liar = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 3
+ achievement chapter = 12
+ AC B3 CH12 Liar = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 4
+ achievement chapter = 12
+ AC B3 CH12 Dagger = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 4
+ achievement chapter = 12
+ AC B3 CH12 Dagger = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 5
+ achievement chapter = 12
+ AC B3 CH12 Delegator = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 5
+ achievement chapter = 12
+ AC B3 CH12 Delegator = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

* On each one of Active 2, loop name "red"
+ Active 2 is overlapping Button
+ Button ID of Button = 6
+ achievement chapter = 12
+ AC B3 CH12 Average = 1
	Test : Set Counter to ID( "Active 2" )
	Active 2 : Make invisible

* On each one of Active, loop name "green"
+ Active is overlapping Button
+ Button ID of Button = 6
+ achievement chapter = 12
+ AC B3 CH12 Average = 0
	Test : Set Counter to ID( "Active 2" )
	Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 1
// + achievement chapter = 3
// + AC B2 CH3 Enemy = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 1
// + achievement chapter = 3
// + AC B2 CH3 Enemy = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 2
// + achievement chapter = 3
// + AC B2 CH3 Cage = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 2
// + achievement chapter = 3
// + AC B2 CH3 Cage = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 1
// + achievement chapter = 41
// + AC B2 CH4 Player = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 1
// + achievement chapter = 41
// + AC B2 CH4 Player = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 2
// + achievement chapter = 41
// + AC B2 CH4 Intimidation = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 2
// + achievement chapter = 41
// + AC B2 CH4 Intimidation = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 3
// + achievement chapter = 41
// + AC B2 CH4 Hadrik = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 3
// + achievement chapter = 41
// + AC B2 CH4 Hadrik = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 4
// + achievement chapter = 41
// + AC B2 CH4 Risk = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 4
// + achievement chapter = 41
// + AC B2 CH4 Risk = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 5
// + achievement chapter = 41
// + AC B2 CH4 Trampler = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 5
// + achievement chapter = 41
// + AC B2 CH4 Trampler = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 1
// + achievement chapter = 42
// + AC B2 CH4 Spear = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 1
// + achievement chapter = 42
// + AC B2 CH4 Spear = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 2
// + achievement chapter = 42
// + AC B2 CH4 Stats = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 2
// + achievement chapter = 42
// + AC B2 CH4 Stats = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 3
// + achievement chapter = 42
// + AC B2 CH4 Time = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 3
// + achievement chapter = 42
// + AC B2 CH4 Time = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 4
// + achievement chapter = 42
// + AC B2 CH4 Motive = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 4
// + achievement chapter = 42
// + AC B2 CH4 Motive = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 1
// + achievement chapter = 5
// + AC B2 CH5 Tribal = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 1
// + achievement chapter = 5
// + AC B2 CH5 Tribal = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 2
// + achievement chapter = 5
// + AC B2 CH5 Divide = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 2
// + achievement chapter = 5
// + AC B2 CH5 Divide = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 3
// + achievement chapter = 5
// + AC B2 CH5 Speaker = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 3
// + achievement chapter = 5
// + AC B2 CH5 Speaker = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 4
// + achievement chapter = 5
// + AC B2 CH5 United = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 4
// + achievement chapter = 5
// + AC B2 CH5 United = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 1
// + achievement chapter = 6
// + AC B2 CH6 Secret = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 1
// + achievement chapter = 6
// + AC B2 CH6 Secret = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 2
// + achievement chapter = 6
// + AC B2 CH6 Edge = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 2
// + achievement chapter = 6
// + AC B2 CH6 Edge = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 1
// + achievement chapter = 7
// + AC B2 CH7 Average = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 1
// + achievement chapter = 7
// + AC B2 CH7 Average = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 2
// + achievement chapter = 7
// + AC B2 CH7 Culprit = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 2
// + achievement chapter = 7
// + AC B2 CH7 Culprit = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 3
// + achievement chapter = 7
// + AC B2 CH7 Delivered = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 3
// + achievement chapter = 7
// + AC B2 CH7 Delivered = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 4
// + achievement chapter = 7
// + AC B2 CH7 Cookie = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 4
// + achievement chapter = 7
// + AC B2 CH7 Cookie = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 1
// + achievement chapter = 8
// + AC B2 CH8 Trivia = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 1
// + achievement chapter = 8
// + AC B2 CH8 Trivia = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 2
// + achievement chapter = 8
// + AC B2 CH8 Savior = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 2
// + achievement chapter = 8
// + AC B2 CH8 Savior = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 3
// + achievement chapter = 8
// + AC B2 CH8 Tree = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 3
// + achievement chapter = 8
// + AC B2 CH8 Tree = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 4
// + achievement chapter = 8
// + AC B2 CH8 Effects = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 4
// + achievement chapter = 8
// + AC B2 CH8 Effects = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 5
// + achievement chapter = 8
// + AC B2 CH8 Gentleman = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 5
// + achievement chapter = 8
// + AC B2 CH8 Gentleman = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 1
// + achievement chapter = 9
// + AC B2 CH9 Missing = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 1
// + achievement chapter = 9
// + AC B2 CH9 Missing = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 2
// + achievement chapter = 9
// + AC B2 CH9 Helper = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 2
// + achievement chapter = 9
// + AC B2 CH9 Helper = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 3
// + achievement chapter = 9
// + AC B2 CH9 King = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 3
// + achievement chapter = 9
// + AC B2 CH9 King = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 4
// + achievement chapter = 9
// + AC B2 CH9 Cards = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 4
// + achievement chapter = 9
// + AC B2 CH9 Cards = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 1
// + achievement chapter = 10
// + AC B2 CH10 Creative = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 1
// + achievement chapter = 10
// + AC B2 CH10 Creative = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 2
// + achievement chapter = 10
// + AC B2 CH10 Mammoth = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 2
// + achievement chapter = 10
// + AC B2 CH10 Mammoth = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 3
// + achievement chapter = 10
// + AC B2 CH10 Demolition = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 3
// + achievement chapter = 10
// + AC B2 CH10 Demolition = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 4
// + achievement chapter = 10
// + AC B2 CH10 Stalker = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 4
// + achievement chapter = 10
// + AC B2 CH10 Stalker = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 1
// + achievement chapter = 11
// + AC B2 CH11 Supportive = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 1
// + achievement chapter = 11
// + AC B2 CH11 Supportive = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 2
// + achievement chapter = 11
// + AC B2 CH11 Madman = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 2
// + achievement chapter = 11
// + AC B2 CH11 Madman = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 3
// + achievement chapter = 11
// + AC B2 CH11 Cutthroat = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 3
// + achievement chapter = 11
// + AC B2 CH11 Cutthroat = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 4
// + achievement chapter = 11
// + AC B2 CH11 Average2 = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 4
// + achievement chapter = 11
// + AC B2 CH11 Average2 = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 5
// + achievement chapter = 11
// + AC B2 CH11 Hidden = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 5
// + achievement chapter = 11
// + AC B2 CH11 Hidden = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * On each one of Active 2, loop name "red"
// + Active 2 is overlapping Button
// + Button ID of Button = 6
// + achievement chapter = 11
// + AC B2 CH11 Elephant = 1
	// Test : Set Counter to ID( "Active 2" )
	// Active 2 : Make invisible

// * On each one of Active, loop name "green"
// + Active is overlapping Button
// + Button ID of Button = 6
// + achievement chapter = 11
// + AC B2 CH11 Elephant = 0
	// Test : Set Counter to ID( "Active 2" )
	// Active : Make invisible

// * AC CH1 Coward = 1
// + achievement chapter = 1
	// Active 2 : Make invisible

* User clicks with left button on Back hitbox
	storyboard controls : Jump to frame "Achievements b3" (73)
	Back button : Set Color of RGB(255,255,0)

* User clicks with left button on Menu hitbox
	storyboard controls : Jump to frame "Main menu" (59)
	Main menu button : Set Color of RGB(255,255,0)

* Mouse pointer is over Group.Buttons
+ pressed counter = 2
	pressed counter : Set Counter to 0

* Always
	Start loop for each one of Active 2, loop name "red"
	Start loop for each one of Active, loop name "green"

// * LoopIndex("buttons") = 3
	// Start loop for each one of Active 2, loop name "red"
